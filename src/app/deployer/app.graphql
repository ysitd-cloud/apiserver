type App {
    id: String!
    owner: String!
    name: String!
    deployment: AppDeployment!
    environment: [AppEnvironemntParameter!]
    network: AppNetwork!
}

type AppDeployment {
    image: String!
    tag: String!
}

type AppEnvironemntParameter {
    key: String!
    value: String!
}

type AppNetwork {
    domain: String!
}

extend type Query {
    app(id: String!): App
}

type Mutation {
    createApp(app: ApplicationInput!): Boolean!
    updateImage(id: String!, deployment: AppDeploymentInput!): Boolean!
}

input ApplicationInput {
    owner: String!
    name: String!
    deployment: AppDeploymentInput!
    environment: [AppEnvironemntParameterInput!]
    network: AppNetworkInput!
}

input AppDeploymentInput {
    image: String!
    tag: String!
}

input AppEnvironemntParameterInput {
    key: String!
    value: String
}

input AppNetworkInput {
    domain: String!
}